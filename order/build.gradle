if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}


def androidId = rootProject.ext.androidId
def appId = rootProject.ext.appId
def supportDependencies = rootProject.ext.supportDes

android {


    compileSdkVersion androidId.compileSdkVersion

    defaultConfig {
        if (!isRelease) {
            applicationId appId.order
        }
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 设置注解参数
        javaCompileOptions{
            annotationProcessorOptions {
                arguments = [
                        moduleName       : project.getName(),
                        packageNameForApt: packageNameForApt
                ]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 配置资源路径,方便测试环境,打包不集成到正式环境
    sourceSets {

        main {
            if (!isRelease) {
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
                java {
                    exclude '**/debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    annotationProcessor project(':arouter_compiler')
    implementation project(":common")
}
